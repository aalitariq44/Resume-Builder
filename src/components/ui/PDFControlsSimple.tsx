'use client';

import React, { useState } from 'react';
import { Resume } from '@/types';
import { 
  downloadPDF, 
  previewPDF, 
  printPDF, 
  validateResumeForPDF,
  getPDFDataURL,
  PDF_SYSTEM_INFO
} from '@/lib/pdf';

interface PDFControlsProps {
  resume: Resume;
  className?: string;
  showSystemInfo?: boolean;
}

const PDFControls: React.FC<PDFControlsProps> = ({ 
  resume, 
  className = '', 
  showSystemInfo = false 
}) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [currentAction, setCurrentAction] = useState<string>('');
  const [message, setMessage] = useState<{ type: 'success' | 'error' | 'info'; text: string } | null>(null);

  // ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช
  const validation = validateResumeForPDF(resume);

  // ุฏุงูุฉ ูุณุงุนุฏุฉ ููุนุงูุฌุฉ ุงูุฃุฎุทุงุก
  const handleAction = async (action: string, fn: () => Promise<void>) => {
    if (!validation.isValid) {
      setMessage({
        type: 'error',
        text: `ุฎุทุฃ ูู ุงูุจูุงูุงุช: ${validation.errors.join('ุ ')}`
      });
      return;
    }

    setIsGenerating(true);
    setCurrentAction(action);
    setMessage(null);

    try {
      await fn();
      setMessage({
        type: 'success',
        text: `ุชู ${action} ุจูุฌุงุญ`
      });
    } catch (error) {
      console.error(`ุฎุทุฃ ูู ${action}:`, error);
      setMessage({
        type: 'error',
        text: `ูุดู ูู ${action}. ุญุงูู ูุฑุฉ ุฃุฎุฑู.`
      });
    } finally {
      setIsGenerating(false);
      setCurrentAction('');
      // ุฅุฎูุงุก ุงูุฑุณุงูุฉ ุจุนุฏ 5 ุซูุงูู
      setTimeout(() => setMessage(null), 5000);
    }
  };

  // ุฏุงูุฉ ุชุญููู PDF
  const handleDownload = () => {
    handleAction('ุชุญููู ุงูููู', async () => {
      await downloadPDF(resume);
    });
  };

  // ุฏุงูุฉ ูุนุงููุฉ PDF
  const handlePreview = () => {
    handleAction('ูุชุญ ุงููุนุงููุฉ', async () => {
      await previewPDF(resume);
    });
  };

  // ุฏุงูุฉ ุทุจุงุนุฉ PDF
  const handlePrint = () => {
    handleAction('ุงูุทุจุงุนุฉ', async () => {
      await printPDF(resume);
    });
  };

  // ุฏุงูุฉ ูุดุงุฑูุฉ PDF
  const handleShare = () => {
    handleAction('ุฅูุดุงุก ุฑุงุจุท ุงููุดุงุฑูุฉ', async () => {
      const dataURL = await getPDFDataURL(resume);
      
      if (navigator.share) {
        // ุงุณุชุฎุฏุงู Web Share API ุฅุฐุง ูุงู ูุชุงุญุงู
        await navigator.share({
          title: `${resume.personalInfo.firstName} ${resume.personalInfo.lastName} - ุณูุฑุฉ ุฐุงุชูุฉ`,
          text: 'ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ',
        });
      } else {
        // ูุณุฎ ุงูุฑุงุจุท ุฅูู ุงูุญุงูุธุฉ
        await navigator.clipboard.writeText(dataURL);
        setMessage({
          type: 'success',
          text: 'ุชู ูุณุฎ ุฑุงุจุท ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ ุฅูู ุงูุญุงูุธุฉ'
        });
      }
    });
  };

  return (
    <div className={`space-y-6 ${className}`}>
      {/* ุจุทุงูุฉ ุงูุชุญูู ูู PDF */}
      <div className="bg-white rounded-lg shadow-md p-6 border">
        <div className="mb-4">
          <h3 className="text-lg font-semibold flex items-center gap-2 mb-2">
            ๐ ุชุตุฏูุฑ ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ
          </h3>
          <p className="text-gray-600 text-sm">
            ูู ุจุชุญููู ุฃู ูุนุงููุฉ ุฃู ุทุจุงุนุฉ ุณูุฑุชู ุงูุฐุงุชูุฉ ุจุตูุบุฉ PDF
          </p>
        </div>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {/* ุฒุฑ ุงูุชุญููู */}
          <button
            onClick={handleDownload}
            disabled={isGenerating || !validation.isValid}
            className="flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
          >
            {isGenerating && currentAction === 'ุชุญููู ุงูููู' ? (
              <span className="animate-spin">โณ</span>
            ) : (
              <span>๐ฅ</span>
            )}
            ุชุญููู
          </button>

          {/* ุฒุฑ ุงููุนุงููุฉ */}
          <button
            onClick={handlePreview}
            disabled={isGenerating || !validation.isValid}
            className="flex items-center justify-center gap-2 px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 disabled:bg-gray-100 disabled:cursor-not-allowed transition-colors"
          >
            {isGenerating && currentAction === 'ูุชุญ ุงููุนุงููุฉ' ? (
              <span className="animate-spin">โณ</span>
            ) : (
              <span>๐๏ธ</span>
            )}
            ูุนุงููุฉ
          </button>

          {/* ุฒุฑ ุงูุทุจุงุนุฉ */}
          <button
            onClick={handlePrint}
            disabled={isGenerating || !validation.isValid}
            className="flex items-center justify-center gap-2 px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 disabled:bg-gray-100 disabled:cursor-not-allowed transition-colors"
          >
            {isGenerating && currentAction === 'ุงูุทุจุงุนุฉ' ? (
              <span className="animate-spin">โณ</span>
            ) : (
              <span>๐จ๏ธ</span>
            )}
            ุทุจุงุนุฉ
          </button>

          {/* ุฒุฑ ุงููุดุงุฑูุฉ */}
          <button
            onClick={handleShare}
            disabled={isGenerating || !validation.isValid}
            className="flex items-center justify-center gap-2 px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 disabled:bg-gray-100 disabled:cursor-not-allowed transition-colors"
          >
            {isGenerating && currentAction === 'ุฅูุดุงุก ุฑุงุจุท ุงููุดุงุฑูุฉ' ? (
              <span className="animate-spin">โณ</span>
            ) : (
              <span>๐ค</span>
            )}
            ูุดุงุฑูุฉ
          </button>
        </div>

        {/* ุฑุณุงุฆู ุงูุชุญูู */}
        {!validation.isValid && (
          <div className="mt-4 p-3 bg-red-50 border border-red-200 rounded-md">
            <h4 className="text-sm font-medium text-red-800 mb-2">
              ูุฌุจ ุฅุตูุงุญ ุงูุฃุฎุทุงุก ุงูุชุงููุฉ ูุจู ุงูุชุตุฏูุฑ:
            </h4>
            <ul className="text-sm text-red-700 space-y-1">
              {validation.errors.map((error, index) => (
                <li key={index} className="flex items-center gap-2">
                  <span className="w-1 h-1 bg-red-500 rounded-full" />
                  {error}
                </li>
              ))}
            </ul>
          </div>
        )}

        {/* ุฑุณุงุฆู ุงููุธุงู */}
        {message && (
          <div className={`mt-4 p-3 rounded-md ${
            message.type === 'success' ? 'bg-green-50 border border-green-200' :
            message.type === 'error' ? 'bg-red-50 border border-red-200' :
            'bg-blue-50 border border-blue-200'
          }`}>
            <div className={`flex items-center gap-2 text-sm ${
              message.type === 'success' ? 'text-green-800' :
              message.type === 'error' ? 'text-red-800' :
              'text-blue-800'
            }`}>
              <span>
                {message.type === 'success' ? 'โ' :
                 message.type === 'error' ? 'โ' : 'โน๏ธ'}
              </span>
              {message.text}
            </div>
          </div>
        )}

        {/* ุญุงูุฉ ุงูุชุญููู */}
        {isGenerating && (
          <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md">
            <div className="flex items-center gap-2 text-sm text-blue-800">
              <span className="animate-spin">โณ</span>
              ุฌุงุฑู {currentAction}...
            </div>
          </div>
        )}
      </div>

      {/* ูุนูููุงุช ุงููุธุงู */}
      {showSystemInfo && (
        <div className="bg-white rounded-lg shadow-md p-6 border">
          <div className="mb-4">
            <h3 className="text-lg font-semibold mb-2">ูุนูููุงุช ูุธุงู PDF</h3>
            <p className="text-gray-600 text-sm">
              ุชูุงุตูู ุชูููุฉ ุญูู ูุธุงู ุฅูุดุงุก ูููุงุช PDF
            </p>
          </div>

          <div className="space-y-4">
            {/* ุงููููุฒุงุช */}
            <div>
              <h4 className="font-medium mb-2">ุงููููุฒุงุช:</h4>
              <div className="flex flex-wrap gap-2">
                {PDF_SYSTEM_INFO.features.map((feature, index) => (
                  <span 
                    key={index} 
                    className="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs"
                  >
                    {feature}
                  </span>
                ))}
              </div>
            </div>

            {/* ุงูุชูุงุตูู ุงูุชูููุฉ */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <span className="font-medium">ุญุฌู ุงูุตูุญุฉ:</span>
                <span className="mr-2 text-gray-600">{PDF_SYSTEM_INFO.pageFormat}</span>
              </div>
              <div>
                <span className="font-medium">ุงูุฎุทูุท:</span>
                <span className="mr-2 text-gray-600">{PDF_SYSTEM_INFO.fonts.join(', ')}</span>
              </div>
              <div>
                <span className="font-medium">ุงููุบุงุช ุงููุฏุนููุฉ:</span>
                <span className="mr-2 text-gray-600">{PDF_SYSTEM_INFO.supportedLanguages.join(', ')}</span>
              </div>
              <div>
                <span className="font-medium">ุญุฏ ุญุฌู ุงูููู:</span>
                <span className="mr-2 text-gray-600">{PDF_SYSTEM_INFO.maxFileSize}</span>
              </div>
            </div>

            {/* ุงูุฅุตุฏุงุฑ */}
            <div className="pt-2 border-t border-gray-200">
              <span className="text-xs text-gray-500">
                ุงูุฅุตุฏุงุฑ {PDF_SYSTEM_INFO.version} - {PDF_SYSTEM_INFO.description}
              </span>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PDFControls;
